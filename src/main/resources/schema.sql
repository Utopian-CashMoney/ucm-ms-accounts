-- MySQL Script generated by MySQL Workbench
-- Sat May 15 15:22:40 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

-- -----------------------------------------------------
-- Schema utopia_cashmoney
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema utopia_cashmoney
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `utopia_cashmoney`;

-- -----------------------------------------------------
-- Table `utopia_cashmoney`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `utopia_cashmoney`.`users`
(
    `id`         INT          NOT NULL AUTO_INCREMENT,
    `username`   VARCHAR(31)  NOT NULL,
    `email`      VARCHAR(127) NOT NULL,
    `password`   VARCHAR(255) NOT NULL,
    `phone`      VARCHAR(31)  NULL,
    `first_name` VARCHAR(63)  NOT NULL,
    `last_name`  VARCHAR(63)  NOT NULL,
    PRIMARY KEY (`id`)
);

CREATE UNIQUE INDEX `email_UNIQUE` ON `utopia_cashmoney`.`users` (`email` ASC);

CREATE UNIQUE INDEX `username_UNIQUE` ON `utopia_cashmoney`.`users` (`username` ASC);


-- -----------------------------------------------------
-- Table `utopia_cashmoney`.`loan`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `utopia_cashmoney`.`loan`
(
    `id`            INT            NOT NULL,
    `max_amount`    DECIMAL(20, 2) NOT NULL,
    `name`          VARCHAR(255)   NOT NULL,
    `interest_rate` DECIMAL(5, 2)  NOT NULL,
    PRIMARY KEY (`id`)
);


-- -----------------------------------------------------
-- Table `utopia_cashmoney`.`user_loan`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `utopia_cashmoney`.`user_loan`
(
    `loan_id`    INT            NOT NULL,
    `users_id`   INT            NOT NULL,
    `balance`    DECIMAL(20, 2) NOT NULL,
    `start_date` DATE           NOT NULL,
    PRIMARY KEY (`loan_id`, `users_id`),
    CONSTRAINT `fk_loan_has_users_loan1`
        FOREIGN KEY (`loan_id`)
            REFERENCES `utopia_cashmoney`.`loan` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_loan_has_users_users1`
        FOREIGN KEY (`users_id`)
            REFERENCES `utopia_cashmoney`.`users` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
);

CREATE INDEX `fk_loan_has_users_users1_idx` ON `utopia_cashmoney`.`user_loan` (`users_id` ASC);

CREATE INDEX `fk_loan_has_users_loan1_idx` ON `utopia_cashmoney`.`user_loan` (`loan_id` ASC);


-- -----------------------------------------------------
-- Table `utopia_cashmoney`.`branch`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `utopia_cashmoney`.`branch`
(
    `location_number` INT          NOT NULL,
    `name`            VARCHAR(255) NOT NULL,
    `zip`             VARCHAR(16)  NOT NULL,
    `street_address`  VARCHAR(255) NOT NULL,
    `city`            VARCHAR(127) NOT NULL,
    `opening_time`    TIME         NOT NULL,
    `closing_time`    TIME         NOT NULL,
    PRIMARY KEY (`location_number`)
);


-- -----------------------------------------------------
-- Table `utopia_cashmoney`.`banker`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `utopia_cashmoney`.`banker`
(
    `id`                     INT          NOT NULL,
    `branch_location_number` INT          NOT NULL,
    `name`                   VARCHAR(255) NOT NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_banker_branch1`
        FOREIGN KEY (`branch_location_number`)
            REFERENCES `utopia_cashmoney`.`branch` (`location_number`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
);

CREATE INDEX `fk_banker_branch1_idx` ON `utopia_cashmoney`.`banker` (`branch_location_number` ASC);


-- -----------------------------------------------------
-- Table `utopia_cashmoney`.`appointment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `utopia_cashmoney`.`appointment`
(
    `id`                     INT          NOT NULL AUTO_INCREMENT,
    `branch_location_number` INT          NOT NULL,
    `users_id`               INT          NOT NULL,
    `banker_id`              INT          NOT NULL,
    `scheduled_time`         DATETIME     NOT NULL,
    `service`                VARCHAR(255) NOT NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_branch_has_users_branch1`
        FOREIGN KEY (`branch_location_number`)
            REFERENCES `utopia_cashmoney`.`branch` (`location_number`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_branch_has_users_users1`
        FOREIGN KEY (`users_id`)
            REFERENCES `utopia_cashmoney`.`users` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_appointment_banker1`
        FOREIGN KEY (`banker_id`)
            REFERENCES `utopia_cashmoney`.`banker` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
);

CREATE INDEX `fk_branch_has_users_users1_idx` ON `utopia_cashmoney`.`appointment` (`users_id` ASC);

CREATE INDEX `fk_branch_has_users_branch1_idx` ON `utopia_cashmoney`.`appointment` (`branch_location_number` ASC);

CREATE INDEX `fk_appointment_banker1_idx` ON `utopia_cashmoney`.`appointment` (`banker_id` ASC);


-- -----------------------------------------------------
-- Table `utopia_cashmoney`.`account`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `utopia_cashmoney`.`account`
(
    `id`           INT                      NOT NULL AUTO_INCREMENT,
    `name`         VARCHAR(45)              NOT NULL,
    `type`         ENUM ('CREDIT', 'DEBIT') NOT NULL,
    `allow_credit` TINYINT                  NOT NULL DEFAULT 0,
    `credit_limit` DECIMAL(20, 2)           NOT NULL DEFAULT 0,
    `allow_cards`  TINYINT                  NOT NULL DEFAULT 0,
    PRIMARY KEY (`id`)
);


-- -----------------------------------------------------
-- Table `utopia_cashmoney`.`user_account`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `utopia_cashmoney`.`user_account`
(
    `account_number` VARCHAR(31)    NOT NULL,
    `users_id`       INT            NOT NULL,
    `account_id`     INT            NOT NULL,
    `balance`        DECIMAL(20, 2) NOT NULL,
    PRIMARY KEY (`account_number`),
    CONSTRAINT `fk_users_has_account_users1`
        FOREIGN KEY (`users_id`)
            REFERENCES `utopia_cashmoney`.`users` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_users_has_account_account1`
        FOREIGN KEY (`account_id`)
            REFERENCES `utopia_cashmoney`.`account` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
);

CREATE INDEX `fk_users_has_account_account1_idx` ON `utopia_cashmoney`.`user_account` (`account_id` ASC);

CREATE INDEX `fk_users_has_account_users1_idx` ON `utopia_cashmoney`.`user_account` (`users_id` ASC);


-- -----------------------------------------------------
-- Table `utopia_cashmoney`.`transaction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `utopia_cashmoney`.`transaction`
(
    `id`             INT            NOT NULL AUTO_INCREMENT,
    `account_number` VARCHAR(31)    NOT NULL,
    `amount`         DECIMAL(20, 2) NOT NULL,
    `timestamp`      TIMESTAMP      NOT NULL,
    `name`           VARCHAR(255)   NOT NULL,
    `is_processed`   TINYINT        NOT NULL,
    `is_cancelled`   TINYINT        NOT NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_transaction_user_account1`
        FOREIGN KEY (`account_number`)
            REFERENCES `utopia_cashmoney`.`user_account` (`account_number`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
);

CREATE INDEX `fk_transaction_user_account1_idx` ON `utopia_cashmoney`.`transaction` (`account_number` ASC);


-- -----------------------------------------------------
-- Table `utopia_cashmoney`.`card`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `utopia_cashmoney`.`card`
(
    `id`             INT         NOT NULL AUTO_INCREMENT,
    `account_number` VARCHAR(31) NOT NULL,
    `card_number`    VARCHAR(31) NOT NULL,
    `exp`            DATE        NOT NULL,
    `cvv`            CHAR(3)     NOT NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_card_user_account1`
        FOREIGN KEY (`account_number`)
            REFERENCES `utopia_cashmoney`.`user_account` (`account_number`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
);

CREATE INDEX `fk_card_user_account1_idx` ON `utopia_cashmoney`.`card` (`account_number` ASC);
